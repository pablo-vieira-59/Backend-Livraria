<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="M:Desafio_Backend.Controllers.AutorController.Listar">
            <summary>
            Obter Todos os Autores.
            </summary>
            <returns>Lista de Autores</returns>
            <response code="200">Lista de Autores</response>
            <response code="204">Nenhum Autor Encontrado</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.EditoraController.Listar">
            <summary>
            Obter Todos as Editoras.
            </summary>
            <returns>Lista de Editoras</returns>
            <response code="200">Lista de Editoras</response>
            <response code="204">Nenhuma Editora Encontrada</response>
            <response code="401">Não Autorizado. Requer Login</response>
            <response code="403">Não Permitido. Requer Privilegios Maiores</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.GeneroController.Listar">
            <summary>
            Obter Todos os Generos.
            </summary>
            <returns>Lista de Generos</returns>
            <response code="200">Lista de Generos</response>
            <response code="204">Nenhum Genero Encontrado</response>
            <response code="401">Não Autorizado. Requer Login</response>
            <response code="403">Não Permitido. Requer Privilegios Maiores</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.LivroController.Listar(Desafio_Backend.Domain.DTO.Livro.LivroFiltrosDto,System.Int32,System.Int32)">
            <summary>
            Obter Todos os Livros em Ordem Alfabetica. É possivel utilizar Filtros.
            </summary>
            <param name="filtros">Estrura Auxiliar Para Filtrar Resultados</param>
            <param name="pagina">Numero da Página Atual</param>
            <param name="numItensPorPagina">Quantidade de Itens na Página</param>
            <returns>Lista de Livros Filtrados</returns>
            <response code="200">Lista de Livros</response>
            <response code="204">Nenhum Livro Encontrado</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.LivroController.ObterPorId(System.Int32)">
            <summary>
            Obtem Livro.
            </summary>
            <param name="id">ID do Livro Cadastrado no Banco</param>
            <returns>Detalhes do Livro</returns>
            <response code="200">Detalhes do Livro</response>
            <response code="204">Nenhum Livro Encontrado</response>
            <response code="500">Erro Interno</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.LivroController.ObterPorNome(System.String)">
            <summary>
            Obtem Livro.
            </summary>
            <param name="nome">Nome do Livro Cadastrado no Banco</param>
            <returns>Detalhes do Livro</returns>
            <response code="200">Detalhes do Livro</response>
            <response code="204">Nenhum Livro Encontrado</response>
            <response code="500">Erro Interno</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.LivroController.Inserir(Desafio_Backend.Domain.DTO.Livro.LivroAdicionarDto)">
            <summary>
            Cadastro de Novos Livros
            </summary>
            <param name="livro">DTO de Dados do Livro Cadastrado no Banco</param>
            <returns>Resultado da Operação</returns>
            <response code="200">Dados do Livro</response>
            <response code="204">Falha ao Cadastrar Livro.</response>
            <response code="401">Não Autorizado. Requer Login</response>
            <response code="403">Não Permitido. Requer Privilegios Maiores</response>
            <response code="500">Erro Interno</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.LivroController.Editar(System.Int32,Desafio_Backend.Domain.DTO.Livro.LivroEditarDto)">
            <summary>
            Edição de Livros
            </summary>
            <param name="livro">DTO para Editar Livro</param>
            <param name="id">ID do Livro Cadastrado no Banco</param>
            <returns>Resultado da Operação</returns>
            <response code="200">Livro Cadastrado</response>
            <response code="400">Falha ao Editar Livro. Verificar Dados de Entrada</response>
            <response code="401">Não Autorizado. Requer Login</response>
            <response code="403">Não Permitido. Requer Privilegios Maiores</response>
            <response code="500">Erro Interno</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.LivroController.Deletar(System.Int32)">
            <summary>
            Remoção de Novos Livros
            </summary>
            <param name="id">ID do Livro Cadastrado no Banco</param>
            <returns>Resultado da Operação</returns>
            <response code="200">Livro Deletado</response>
            <response code="400">Falha ao Deletar Livro. Verificar Dados de Entrada</response>
            <response code="401">Não Autorizado. Requer Login</response>
            <response code="403">Não Permitido. Requer Privilegios Maiores</response>
            <response code="500">Erro Interno</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.UsuarioController.Listar">
            <summary>
            Obter Todos os Usuarios.
            </summary>
            <returns>Lista de Usuarios</returns>
            <response code="200">Lista de Usuarios</response>
            <response code="204">Nenhum Usuario Encontrado</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.UsuarioController.ListarRoles">
            <summary>
            Obter Todos as Roles.
            </summary>
            <returns>Lista de Roles</returns>
            <response code="200">Lista de Usuarios</response>
            <response code="204">Nenhum Usuario Encontrado</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.UsuarioController.ObterPorId(System.Int32)">
            <summary>
            Obtem Usuario.
            </summary>
            <param name="id">ID do Usuario Cadastrado no Banco</param>
            <returns>Detalhes do Usuario</returns>
            <response code="200">Detalhes do Usuario</response>
            <response code="204">Nenhum Usuario Encontrado</response>
            <response code="500">Erro Interno</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.UsuarioController.ObterPorNome(System.String)">
            <summary>
            Obtem Usuario
            </summary>
            <param name="nome">Nome do Usuario Cadastrado no Banco</param>
            <returns>Detalhes do Usuario</returns>
            <response code="200">Detalhes do Usuario</response>
            <response code="204">Nenhum Usuario Encontrado</response>
            <response code="500">Erro Interno</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.UsuarioController.Inserir(Desafio_Backend.Domain.DTO.User.UserAdicionarDto)">
            <summary>
            Cadastro de Novos Usuarios
            </summary>
            <param name="usuario">DTO do Usuario para Cadastrar no Banco</param>
            <returns>Resultado da Operação</returns>
            <response code="200">Usuario Cadastrado</response>
            <response code="500">Erro Interno</response>
        </member>
        <member name="M:Desafio_Backend.Controllers.UsuarioController.Login(Desafio_Backend.Domain.DTO.User.UserLoginDto)">
            <summary>
            Cadastro de Novos Usuarios
            </summary>
            <param name="usuario">DTO do Usuario para Logar no Sistema</param>
            <returns>Resultado da Operação</returns>
            <response code="200">Usuario Cadastrado</response>
            <response code="500">Erro Interno</response>
        </member>
    </members>
</doc>
